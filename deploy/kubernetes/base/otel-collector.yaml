apiVersion: v1
kind: ServiceAccount
metadata:
  name: collector
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: otel-collector
rules:
- apiGroups: [""]
  resources: ["pods", "namespaces", "nodes"]
  verbs: ["get", "watch", "list"]
- apiGroups: ["apps"]
  resources: ["replicasets", "deployments", "statefulsets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["extensions"]
  resources: ["replicasets"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: otel-collector
subjects:
- kind: ServiceAccount
  name: collector
roleRef:
  kind: ClusterRole
  name: otel-collector
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-collector
spec:
  selector:
    matchLabels:
      app: otel-collector
  template:
    metadata:
      labels:
        app: otel-collector
    spec:
      serviceAccountName: collector
      initContainers:
        - name: volume-permissions
          image: busybox
          command: ["/bin/sh"]
          args: ["-c", "chmod -R 766 /tmp/export && chmod 777 /tmp/export"]
          volumeMounts:
          - name: export
            mountPath: /tmp/export
      containers:
        - name: otel-collector
          # fixed versions for pyroscope, otel-collector, otel-profiler due to protocol changes
          image: otel/opentelemetry-collector-contrib:0.129.1
          args:
            - "--config=/etc/otel-collector-config.yaml"
            - "--feature-gates=service.profilesSupport"
          env:
            - name: KUBERNETES_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: config
              mountPath: /etc/otel-collector-config.yaml
              subPath: config.yaml
            - name: export
              mountPath: /tmp/export
      volumes:
        - name: config
          configMap:
            name: otel-collector-config
        - name: export
          hostPath:
            type: DirectoryOrCreate
            path: /tmp/otel-export
---
apiVersion: v1
kind: Service
metadata:
  name: otel-collector-service
spec:
  selector:
    app: otel-collector
  ports:
    - name: otlp-grpc
      port: 4317
      targetPort: 4317
    - name: otlp-http
      port: 4318
      targetPort: 4318
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-config
data:
  config.yaml: |
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:

    processors:
      batch:

      k8sattributes:
        auth_type: "serviceAccount"
        passthrough: false
        filter:
          node_from_env_var: KUBERNETES_NODE_NAME
        extract:
          metadata:
            - k8s.pod.name
            - k8s.pod.uid
            - k8s.deployment.name
            - k8s.namespace.name
            - service.namespace
            - service.name
            - service.version
            - service.instance.id
          labels:
            - tag_name: app.label.component
              key: app.kubernetes.io/component
              from: pod
          otel_annotations: true
        pod_association:
          - sources:
              - from: resource_attribute
                name: container.id

    exporters:
      file:
        path: /tmp/export/otel.json

    service:
      pipelines:
        metrics:
          receivers: [otlp]
          processors: [k8sattributes,batch]
          exporters: [file]
        traces:
          receivers: [otlp]
          processors: [k8sattributes,batch]
          exporters: [file]
        logs:
          receivers: [otlp]
          processors: [k8sattributes,batch]
          exporters: [file]
        profiles:
          receivers: [otlp]
          processors: [k8sattributes]
          exporters: [file]

      telemetry:
        logs:
          level: debug
